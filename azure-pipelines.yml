trigger:
- main

pool:
  name: Default
 
strategy:
  matrix:
    Python312:
      python.version: '3.12'

steps:
# - task: UsePythonVersion@0
#   inputs:
#     versionSpec: '$(python.version)'
#   displayName: 'Use Python $(python.version)'
#   env:
#     GITHUB_TOKEN: $(GITHUB_TOKEN)

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: $(System.DefaultWorkingDirectory)
    includeRootFolder: false
    archiveType: zip
    archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-$(python.version).zip
    replaceExistingArchive: true
    
# - script: |
#     mkdir "$(Build.ArtifactStagingDirectory)\my_artifact"
#     xcopy /E /I /H /R /Y * "$(Build.ArtifactStagingDirectory)\my_artifact\"
#   displayName: 'Stage Build Artifacts'

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)/my_artifact'
#     ArtifactName: drop
#     publishLocation: 'FilePath'
#     TargetPath: 'C:\Devops_azure'
#   displayName: 'my_artifact'
  
- task: PublishBuildArtifacts@1
  inputs:
    ArtifactName: drop
    TargetPath: '$(Build.ArtifactStagingDirectory)'
    publishLocation: 'Container'
  displayName: 'Public artifact'

# - task: PublishBuildArtifacts@1
#   inputs:
#     ArtifactName: drop
#     TargetPath: '$(Build.ArtifactStagingDirectory)/my_artifact'
#     publishLocation: 'pipeline'
#   displayName: 'Public artifact'
  
- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'drop'
#     publishLocation: 'Container'
# - script: |
#     echo "Deploying to local agent directory C:\Devops_azure"
#     xcopy /E /I /H $(System.DefaultWorkingDirectory) "C:\Devops_azure\simple-python-website"
#   displayName: 'Deploy to Local Agent'


